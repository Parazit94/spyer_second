plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id "org.liquibase.gradle" version "2.0.1"
	id 'java-library'
}

version = '0.0.1-SNAPSHOT'

group = 'ru.spy'

targetCompatibility = JavaVersion.VERSION_11
sourceCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}

configurations {
	annotationProcessor {
		extendsFrom compileOnly
	}

	testAnnotationProcessor {
		extendsFrom testCompileOnly
	}
}

ext {
	set("lombokVersion", "1.18.8")
	set("liquibaseCoreVersion", "3.6.3")
	set("liquibaseDslVersion", "2.0.1")
	set("p6spyVersion", "3.8.2")
	set("postgresVersion", "42.2.5")
}

dependencies {
	api "org.springframework.boot:spring-boot-starter"
	api "org.springframework.boot:spring-boot-starter-web"
	api "org.springframework.boot:spring-boot-starter-data-jpa"

	api "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
	api "p6spy:p6spy:${p6spyVersion}"
	runtimeOnly "org.postgresql:postgresql:${postgresVersion}"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	compileOnly "org.springframework.boot:spring-boot-configuration-processor"

	testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
	testCompileOnly "org.springframework.boot:spring-boot-configuration-processor"

	liquibaseRuntime "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
	liquibaseRuntime "org.liquibase:liquibase-groovy-dsl:${liquibaseDslVersion}"
	liquibaseRuntime "org.postgresql:postgresql:${postgresVersion}"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

liquibase {
	def properties = new Properties()
	def propertyFile = file("config/liquibase.properties")

	if (propertyFile.exists()) {
		propertyFile.withInputStream { properties.load(it) }
	}

	activities {
		main {
			changeLogFile "${projectDir}/liquibase/changelog.yaml"
			outputFile "${buildDir}/liquibase/sql-migration.sql"
			url properties.get("url", "jdbc:postgresql://localhost:5432/safs")
			defaultSchemaName properties.get("schema", "spyer_users")
			username properties.get("username", "admin")
			password properties.get("password", "admin")
		}
	}
}

test {
	useJUnitPlatform()
}
